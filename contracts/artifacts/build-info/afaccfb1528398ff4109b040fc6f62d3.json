{
	"id": "afaccfb1528398ff4109b040fc6f62d3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ifelse.sol": {
				"content": "\n\ncontract Ifelse{\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Ifelse.sol": {
				"Ifelse": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ifelse.sol\":2:25  contract Ifelse{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ifelse.sol\":2:25  contract Ifelse{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220647c67f83acd3e0548123e6ffb42ecfa66c8b00aeb78666a65d656ca3c1aabb364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220647c67f83acd3e0548123e6ffb42ecfa66c8b00aeb78666a65d656ca3c1aabb364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x7C67F83ACD RETURNDATACOPY SDIV BASEFEE SLT RETURNDATACOPY PUSH16 0xFB42ECFA66C8B00AEB78666A65D656CA EXTCODECOPY BYTE 0xAB 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "2:23:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220647c67f83acd3e0548123e6ffb42ecfa66c8b00aeb78666a65d656ca3c1aabb364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x7C67F83ACD RETURNDATACOPY SDIV BASEFEE SLT RETURNDATACOPY PUSH16 0xFB42ECFA66C8B00AEB78666A65D656CA EXTCODECOPY BYTE 0xAB 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "2:23:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2,
									"end": 25,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2,
									"end": 25,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2,
									"end": 25,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2,
									"end": 25,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2,
									"end": 25,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2,
									"end": 25,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2,
									"end": 25,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 25,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2,
									"end": 25,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2,
									"end": 25,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2,
									"end": 25,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2,
									"end": 25,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 25,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2,
									"end": 25,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2,
									"end": 25,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2,
									"end": 25,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2,
									"end": 25,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2,
									"end": 25,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2,
									"end": 25,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2,
									"end": 25,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2,
									"end": 25,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220647c67f83acd3e0548123e6ffb42ecfa66c8b00aeb78666a65d656ca3c1aabb364736f6c63430008190033",
									".code": [
										{
											"begin": 2,
											"end": 25,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2,
											"end": 25,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2,
											"end": 25,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2,
											"end": 25,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2,
											"end": 25,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2,
											"end": 25,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Ifelse.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ifelse.sol\":\"Ifelse\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ifelse.sol\":{\"keccak256\":\"0xdf7deabe0eb1f4c8669e327496e20fa93fd46a2d1272bfdfed268b461075dbbb\",\"urls\":[\"bzz-raw://04fc2b81ddfc979df2cca33b1123c7fee871b99954a4bea990696b3b92683042\",\"dweb:/ipfs/QmU7ovDgyyHHm63BtV8u5kmHKwuLhCqZDfooBAj3Q5maD3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Ifelse.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Ifelse.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.25;\"\n--> contracts/Ifelse.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.25;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Ifelse.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Ifelse.sol": {
				"ast": {
					"absolutePath": "contracts/Ifelse.sol",
					"exportedSymbols": {
						"Ifelse": [
							1
						]
					},
					"id": 2,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ifelse",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1,
							"linearizedBaseContracts": [
								1
							],
							"name": "Ifelse",
							"nameLocation": "11:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2,
							"src": "2:23:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "2:23:0"
				},
				"id": 0
			}
		}
	}
}